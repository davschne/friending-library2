Angular structure
-root
  -public  : if no token
    -description of app
    -sign in button
  -app     : if token
    -Nav bar
    -Main pane
      -Find Books
        -shows available books (paginated)
        -allows searching for books
        -allows requesting a book
      -My Library
        -shows borrowed books
        -shows lent books
          -allows checking in a returned book
        -shows books owned
          -allows adding and deleting books
      -Requests
        -shows requests for my books
          -allows checking out a requested book (and setting a due date)
        -shows my requests for books
        (-shows outgoing friend requests)
        (-shows incoming friend requests
          -allows approving a friend request
          -allows denying a friend request
        )
      (-Friends
        -shows list of friends (and contact info?)
        -allows searching for friends
        -allows requesting a friend
      )
      -Account
        -allows deleting an account

Design ideas
-keep data model (relevant to view) on the client
-data model populates views
-AJAX to backend updates data model
  -how to propagate changes to views asynchronously? Observables?
-operations that require API call
  -performed immediately on the client (assuming success)
  -on success: do nothing
  -on failure: execute callback function (undo operation or throw error (to be caught by view controller?))

copy obj:
  copyid
  ISBN
  ownerid
  ...

users:
  hash (by ID)

copies:
  hash table:
    copyid : {
      ISBN
      owner
    }

books:
  getByISBN
  hash table:
    ISBN : {

      title,
      authors,
      ...
    }

bookRequests:
  copy
  requester

book_requests API:
  getIncoming()
  getOutgoing()
  create(copy, requesterid)
  delete(copy, requesterid)
  update : refresh data model from server

borrowed API:
  get()
  update()
  borrow(copy)
  return(copy)

lent API
  get()
  update()
  checkout(copy)
  checkin(copy)

my_books API
  get()
  update()
  add(copy)
  delete(copy)

-friend deletion triggers:
  -delete relevant book requests
  -if currently borrowing:
    -borrower can't cancel friendship
    -loaner can (but this should probably be handled by the program)
